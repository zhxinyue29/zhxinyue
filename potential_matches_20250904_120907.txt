🔍 可能的权重匹配建议
生成时间: 20250904_120907

➡️ 模型键: final_norm.weight
  可能的权重键匹配:
    1. norm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: input_proj.0.bias
  找不到可能的匹配项

➡️ 模型键: input_proj.0.weight
  可能的权重键匹配:
    1. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 773) vs 权重: (8960, 1536)
    2. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 773) vs 权重: (8960, 1536)
    3. layers.7.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 773) vs 权重: (8960, 1536)
    4. layers.6.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 773) vs 权重: (8960, 1536)
    5. layers.5.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 773) vs 权重: (8960, 1536)

➡️ 模型键: input_proj.2.weight
  可能的权重键匹配:
    1. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (1536,) vs 权重: (8960, 1536)
    2. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (1536,) vs 权重: (8960, 1536)
    3. layers.7.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (1536,) vs 权重: (8960, 1536)
    4. layers.6.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (1536,) vs 权重: (8960, 1536)
    5. layers.5.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (1536,) vs 权重: (8960, 1536)

➡️ 模型键: layers.0.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.0.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.20.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.10.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.0.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.0.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.20.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.10.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.0.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.0.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.20.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.10.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.0.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.0.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.20.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.10.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.0.attention_norm.weight
  可能的权重键匹配:
    1. layers.0.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.20.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.10.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.0.ffn_norm.weight
  可能的权重键匹配:
    1. layers.0.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.20.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.10.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.0.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.0.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.20.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.10.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.0.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.0.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.20.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.10.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.1.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.19.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.18.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.17.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.1.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.19.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.18.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.17.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.1.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.19.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.18.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.17.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.1.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.19.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.18.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.17.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.1.attention_norm.weight
  可能的权重键匹配:
    1. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.19.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.18.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.17.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.1.ffn_norm.weight
  可能的权重键匹配:
    1. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.19.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.18.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.17.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.1.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.19.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.18.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.17.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.1.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.19.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.18.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.17.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.10.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.10.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.0.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.20.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.10.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.10.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.0.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.20.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.10.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.10.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.0.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.20.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.10.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.10.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.0.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.20.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.10.attention_norm.weight
  可能的权重键匹配:
    1. layers.10.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.0.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.20.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.10.ffn_norm.weight
  可能的权重键匹配:
    1. layers.10.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.0.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.20.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.10.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.10.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.0.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.20.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.10.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.10.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.0.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.20.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.11.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.11.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.19.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.18.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.11.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.11.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.19.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.18.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.11.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.11.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.19.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.18.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.11.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.11.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.19.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.18.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.11.attention_norm.weight
  可能的权重键匹配:
    1. layers.11.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.19.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.18.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.11.ffn_norm.weight
  可能的权重键匹配:
    1. layers.11.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.19.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.18.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.11.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.11.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.19.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.18.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.11.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.11.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.19.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.18.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.12.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.12.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.2.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.12.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.12.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.2.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.12.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.12.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.2.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.12.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.12.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.2.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.12.attention_norm.weight
  可能的权重键匹配:
    1. layers.12.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.2.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.12.ffn_norm.weight
  可能的权重键匹配:
    1. layers.12.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.2.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.12.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.12.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.2.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.12.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.12.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.2.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.13.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.13.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.3.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.23.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.13.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.13.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.3.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.23.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.13.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.13.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.3.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.23.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.13.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.13.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.3.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.23.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.13.attention_norm.weight
  可能的权重键匹配:
    1. layers.13.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.3.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.23.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.13.ffn_norm.weight
  可能的权重键匹配:
    1. layers.13.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.3.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.23.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.13.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.13.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.3.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.23.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.13.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.13.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.3.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.23.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.14.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.14.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.4.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.24.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.14.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.14.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.4.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.24.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.14.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.14.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.4.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.24.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.14.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.14.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.4.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.24.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.14.attention_norm.weight
  可能的权重键匹配:
    1. layers.14.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.4.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.24.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.14.ffn_norm.weight
  可能的权重键匹配:
    1. layers.14.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.4.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.24.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.14.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.14.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.4.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.24.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.14.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.14.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.4.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.24.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.15.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.15.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.5.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.25.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.15.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.15.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.5.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.25.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.15.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.15.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.5.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.25.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.15.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.15.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.5.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.25.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.15.attention_norm.weight
  可能的权重键匹配:
    1. layers.15.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.5.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.25.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.15.ffn_norm.weight
  可能的权重键匹配:
    1. layers.15.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.5.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.25.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.15.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.15.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.5.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.25.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.15.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.15.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.5.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.25.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.16.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.16.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.6.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.16.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.16.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.6.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.16.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.16.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.6.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.16.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.16.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.6.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.16.attention_norm.weight
  可能的权重键匹配:
    1. layers.16.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.6.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.16.ffn_norm.weight
  可能的权重键匹配:
    1. layers.16.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.6.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.16.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.16.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.6.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.16.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.16.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.6.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.17.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.17.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.7.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.17.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.17.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.7.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.17.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.17.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.7.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.17.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.17.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.7.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.17.attention_norm.weight
  可能的权重键匹配:
    1. layers.17.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.7.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.17.ffn_norm.weight
  可能的权重键匹配:
    1. layers.17.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.7.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.17.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.17.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.7.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.17.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.17.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.7.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.18.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.18.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.8.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.19.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.18.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.18.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.8.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.19.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.18.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.18.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.8.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.19.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.18.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.18.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.8.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.19.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.18.attention_norm.weight
  可能的权重键匹配:
    1. layers.18.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.8.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.19.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.18.ffn_norm.weight
  可能的权重键匹配:
    1. layers.18.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.8.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.19.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.18.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.18.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.8.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.19.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.18.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.18.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.19.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.19.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.19.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.9.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.19.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.19.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.19.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.9.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.19.self_attn.v_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)

➡️ 模型键: layers.19.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.19.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.9.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.19.self_attn.v_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)

➡️ 模型键: layers.19.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.19.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.9.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.19.self_attn.q_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)

➡️ 模型键: layers.19.attention_norm.weight
  可能的权重键匹配:
    1. layers.19.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.9.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.18.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.19.ffn_norm.weight
  可能的权重键匹配:
    1. layers.19.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.9.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.18.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.19.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.19.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.9.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.18.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.19.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.19.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.18.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.2.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.2.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.25.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.24.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.2.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.2.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.25.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.24.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.2.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.2.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.25.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.24.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.2.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.2.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.25.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.24.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.2.attention_norm.weight
  可能的权重键匹配:
    1. layers.2.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.25.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.24.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.2.ffn_norm.weight
  可能的权重键匹配:
    1. layers.2.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.25.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.24.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.2.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.2.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.25.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.24.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.2.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.2.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.25.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.24.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.20.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.20.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.2.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.0.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.20.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.20.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.2.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.0.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.20.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.20.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.2.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.0.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.20.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.20.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.2.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.0.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.20.attention_norm.weight
  可能的权重键匹配:
    1. layers.20.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.2.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.0.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.20.ffn_norm.weight
  可能的权重键匹配:
    1. layers.20.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.2.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.0.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.20.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.20.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.2.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.0.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.20.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.20.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.2.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.0.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.21.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.21.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.2.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.21.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.21.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.2.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.21.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.21.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.2.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.1.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.21.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.21.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.2.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.1.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.21.attention_norm.weight
  可能的权重键匹配:
    1. layers.21.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.2.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.21.ffn_norm.weight
  可能的权重键匹配:
    1. layers.21.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.2.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.1.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.21.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.21.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.2.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.21.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.21.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.2.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.1.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.22.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.22.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.2.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.25.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.22.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.22.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.2.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.25.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.22.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.22.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.2.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.25.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.22.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.22.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.2.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.25.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.22.attention_norm.weight
  可能的权重键匹配:
    1. layers.22.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.2.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.25.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.22.ffn_norm.weight
  可能的权重键匹配:
    1. layers.22.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.2.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.25.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.22.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.22.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.2.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.25.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.22.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.22.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.2.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.25.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.23.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.23.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.3.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.2.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.23.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.23.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.3.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.2.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.23.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.23.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.3.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.2.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.23.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.23.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.3.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.2.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.23.attention_norm.weight
  可能的权重键匹配:
    1. layers.23.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.3.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.2.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.23.ffn_norm.weight
  可能的权重键匹配:
    1. layers.23.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.3.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.2.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.23.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.23.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.3.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.2.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.23.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.23.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.3.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.2.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.24.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.24.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.4.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.2.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.24.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.24.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.4.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.2.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.24.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.24.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.4.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.2.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.24.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.24.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.4.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.2.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.24.attention_norm.weight
  可能的权重键匹配:
    1. layers.24.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.4.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.2.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.24.ffn_norm.weight
  可能的权重键匹配:
    1. layers.24.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.4.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.2.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.24.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.24.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.4.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.2.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.24.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.24.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.4.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.2.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.25.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.25.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.5.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.2.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.25.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.25.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.5.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.2.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.25.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.25.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.5.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.2.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.25.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.25.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.5.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.2.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.25.attention_norm.weight
  可能的权重键匹配:
    1. layers.25.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.5.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.2.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.25.ffn_norm.weight
  可能的权重键匹配:
    1. layers.25.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.5.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.2.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.25.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.25.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.5.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.2.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.25.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.25.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.5.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.2.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.26.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.6.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.2.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.26.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.6.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.2.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.v_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)

➡️ 模型键: layers.26.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.6.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.2.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.26.self_attn.v_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)

➡️ 模型键: layers.26.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.6.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.2.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.26.self_attn.q_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)

➡️ 模型键: layers.26.attention_norm.weight
  可能的权重键匹配:
    1. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.6.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.2.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.25.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.26.ffn_norm.weight
  可能的权重键匹配:
    1. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.6.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.2.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.25.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.26.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.6.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.2.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.25.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.26.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.6.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.2.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.25.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.27.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.7.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.2.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.27.self_attn.q_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)

➡️ 模型键: layers.27.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.7.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.2.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.v_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)
    5. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.27.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.7.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.2.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.27.self_attn.v_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)
    5. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.27.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.7.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.2.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.27.self_attn.q_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)
    5. layers.27.self_attn.o_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)

➡️ 模型键: layers.27.attention_norm.weight
  可能的权重键匹配:
    1. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.7.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.2.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.25.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.27.ffn_norm.weight
  可能的权重键匹配:
    1. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.7.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.2.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.25.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.27.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.7.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.2.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.25.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.27.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.7.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.2.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.25.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.3.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.3.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.23.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.13.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.3.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.3.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.23.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.13.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.3.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.3.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.23.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.13.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.3.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.3.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.23.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.13.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.3.attention_norm.weight
  可能的权重键匹配:
    1. layers.3.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.23.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.13.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.3.ffn_norm.weight
  可能的权重键匹配:
    1. layers.3.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.23.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.13.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.3.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.3.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.23.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.13.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.3.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.3.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.23.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.13.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.4.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.4.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.24.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.14.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.4.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.4.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.24.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.14.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.4.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.4.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.24.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.14.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.4.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.4.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.24.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.14.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.4.attention_norm.weight
  可能的权重键匹配:
    1. layers.4.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.24.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.14.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.4.ffn_norm.weight
  可能的权重键匹配:
    1. layers.4.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.24.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.14.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.4.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.4.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.24.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.14.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.4.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.4.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.24.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.14.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.5.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.5.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.25.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.15.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.5.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.5.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.25.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.15.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.5.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.5.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.25.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.15.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.5.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.5.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.25.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.15.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.5.attention_norm.weight
  可能的权重键匹配:
    1. layers.5.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.25.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.15.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.5.ffn_norm.weight
  可能的权重键匹配:
    1. layers.5.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.25.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.15.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.5.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.5.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.25.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.15.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.5.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.5.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.25.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.15.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.6.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.6.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.26.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.16.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.6.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.6.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.26.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.16.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.6.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.6.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.26.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.16.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.6.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.6.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.26.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.16.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.6.attention_norm.weight
  可能的权重键匹配:
    1. layers.6.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.26.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.16.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.6.ffn_norm.weight
  可能的权重键匹配:
    1. layers.6.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.26.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.16.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.6.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.6.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.26.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.16.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.6.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.6.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.26.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.16.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.7.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.7.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.27.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.17.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.7.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.7.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.27.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.17.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.7.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.7.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.27.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.17.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.9.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.8.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.7.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.7.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.27.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.17.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.7.attention_norm.weight
  可能的权重键匹配:
    1. layers.7.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.27.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.17.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.7.ffn_norm.weight
  可能的权重键匹配:
    1. layers.7.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.27.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.17.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.9.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.8.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.7.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.7.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.27.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.17.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.7.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.7.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.27.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.17.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.8.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.8.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.18.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.9.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.8.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    5. layers.8.self_attn.q_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)

➡️ 模型键: layers.8.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.8.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.18.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.9.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.8.self_attn.v_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)
    5. layers.8.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.8.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.8.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.18.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.9.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    4. layers.8.self_attn.v_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)
    5. layers.8.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)

➡️ 模型键: layers.8.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.8.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.18.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.9.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.8.self_attn.q_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)
    5. layers.8.self_attn.o_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)

➡️ 模型键: layers.8.attention_norm.weight
  可能的权重键匹配:
    1. layers.8.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.18.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.9.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.7.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.6.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.8.ffn_norm.weight
  可能的权重键匹配:
    1. layers.8.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.18.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.9.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.7.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.6.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.8.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.8.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.18.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.9.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.7.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.6.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.8.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.18.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.7.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.6.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.9.attention.k_proj.weight
  可能的权重键匹配:
    1. layers.9.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.19.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.9.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    4. layers.9.self_attn.q_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)
    5. layers.9.self_attn.o_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)

➡️ 模型键: layers.9.attention.o_proj.weight
  可能的权重键匹配:
    1. layers.9.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.19.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.9.self_attn.v_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)
    4. layers.9.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.9.self_attn.k_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)

➡️ 模型键: layers.9.attention.q_proj.weight
  可能的权重键匹配:
    1. layers.9.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    2. layers.19.self_attn.q_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    3. layers.9.self_attn.v_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)
    4. layers.9.self_attn.o_proj.weight
      ✅ 形状匹配: (1536, 1536) == (1536, 1536)
    5. layers.9.self_attn.k_proj.weight
      ⚠️ 形状不匹配: 模型: (1536, 1536) vs 权重: (256, 1536)

➡️ 模型键: layers.9.attention.v_proj.weight
  可能的权重键匹配:
    1. layers.9.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    2. layers.19.self_attn.v_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)
    3. layers.9.self_attn.q_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)
    4. layers.9.self_attn.o_proj.weight
      ⚠️ 形状不匹配: 模型: (256, 1536) vs 权重: (1536, 1536)
    5. layers.9.self_attn.k_proj.weight
      ✅ 形状匹配: (256, 1536) == (256, 1536)

➡️ 模型键: layers.9.attention_norm.weight
  可能的权重键匹配:
    1. layers.9.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.19.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.8.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.7.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.6.post_attention_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.9.ffn_norm.weight
  可能的权重键匹配:
    1. layers.9.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    2. layers.19.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    3. layers.8.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    4. layers.7.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)
    5. layers.6.input_layernorm.weight
      ✅ 形状匹配: (1536,) == (1536,)

➡️ 模型键: layers.9.mlp.gate_proj.bias
  可能的权重键匹配:
    1. layers.9.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.19.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.8.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.7.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.6.mlp.gate_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: layers.9.mlp.up_proj.bias
  可能的权重键匹配:
    1. layers.9.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    2. layers.19.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    3. layers.8.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    4. layers.7.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)
    5. layers.6.mlp.up_proj.weight
      ⚠️ 形状不匹配: 模型: (8960,) vs 权重: (8960, 1536)

➡️ 模型键: output_layer.bias
  找不到可能的匹配项

➡️ 模型键: output_layer.weight
  可能的权重键匹配:
    1. layers.9.input_layernorm.weight
      ⚠️ 形状不匹配: 模型: (1, 1536) vs 权重: (1536,)
    2. layers.8.input_layernorm.weight
      ⚠️ 形状不匹配: 模型: (1, 1536) vs 权重: (1536,)
    3. layers.7.input_layernorm.weight
      ⚠️ 形状不匹配: 模型: (1, 1536) vs 权重: (1536,)
    4. layers.6.input_layernorm.weight
      ⚠️ 形状不匹配: 模型: (1, 1536) vs 权重: (1536,)
    5. layers.5.input_layernorm.weight
      ⚠️ 形状不匹配: 模型: (1, 1536) vs 权重: (1536,)

➡️ 模型键: rotary_emb.cos_cached
  找不到可能的匹配项

➡️ 模型键: rotary_emb.inv_freq
  找不到可能的匹配项

➡️ 模型键: rotary_emb.sin_cached
  找不到可能的匹配项

